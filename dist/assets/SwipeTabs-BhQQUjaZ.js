class t{constructor(){this.touchStartX=0,this.touchEndX=0,this.touchStartY=0,this.touchEndY=0,this.isSwiping=!1,this.swipeThreshold=80,this.tabs=["/dashboard","/transactions","/categories","/analytics","/recorrentes","/notifications","/settings"],this.currentTabIndex=0,this.container=null,this.swipeIndicator=null,this.isEnabled=!0,this.hasShownInitialHint=!1,this.init()}init(){this.container=document.querySelector("#app-content"),this.container&&(window.appState?.currentUser?(this.createSwipeIndicator(),this.bindEvents(),this.updateCurrentTabIndex()):setTimeout(()=>{window.appState?.currentUser&&this.init()},2e3))}createSwipeIndicator(){this.swipeIndicator=document.createElement("div"),this.swipeIndicator.id="swipe-indicator",this.swipeIndicator.innerHTML=`\n      <div class="swipe-dots">\n        ${this.tabs.map((t,i)=>`<div class="swipe-dot ${0===i?"active":""}" data-index="${i}"></div>`).join("")}\n      </div>\n      <div class="swipe-hint">← Deslize para navegar →</div>\n    `,this.swipeIndicator.className="swipe-indicator";const t=document.createElement("style");t.textContent="\n      .swipe-indicator {\n        position: fixed;\n        top: 20px;\n        left: 50%;\n        transform: translateX(-50%);\n        z-index: 1000;\n        background: rgba(0, 0, 0, 0.8);\n        color: white;\n        padding: 8px 16px;\n        border-radius: 20px;\n        font-size: 12px;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        pointer-events: none;\n      }\n      \n      .swipe-indicator.show {\n        opacity: 1;\n      }\n      \n      .swipe-dots {\n        display: flex;\n        gap: 6px;\n        justify-content: center;\n        margin-bottom: 4px;\n      }\n      \n      .swipe-dot {\n        width: 6px;\n        height: 6px;\n        border-radius: 50%;\n        background: rgba(255, 255, 255, 0.5);\n        transition: all 0.3s ease;\n      }\n      \n      .swipe-dot.active {\n        background: white;\n        transform: scale(1.2);\n      }\n      \n      .swipe-hint {\n        text-align: center;\n        font-size: 10px;\n        opacity: 0.8;\n      }\n      \n      .swipe-feedback {\n        position: fixed;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background: rgba(0, 0, 0, 0.8);\n        color: white;\n        padding: 12px 20px;\n        border-radius: 8px;\n        font-size: 14px;\n        z-index: 1001;\n        opacity: 0;\n        transition: opacity 0.2s ease;\n        pointer-events: none;\n      }\n      \n      .swipe-feedback.show {\n        opacity: 1;\n      }\n      \n      .swipe-transition {\n        transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n      }\n      \n      @media (max-width: 768px) {\n        .swipe-indicator {\n          top: 10px;\n          padding: 6px 12px;\n          font-size: 11px;\n        }\n      }\n    ",document.head.appendChild(t),document.body.appendChild(this.swipeIndicator),setTimeout(()=>{this.swipeIndicator&&this.swipeIndicator.classList.add("show")},1e3),setTimeout(()=>{this.swipeIndicator&&this.swipeIndicator.classList.remove("show")},6e3)}bindEvents(){const t=document.getElementById("login-page");t&&"none"!==t.style.display||(this.container.addEventListener("touchstart",this.handleTouchStart.bind(this),{passive:!0}),this.container.addEventListener("touchmove",this.handleTouchMove.bind(this),{passive:!1}),this.container.addEventListener("touchend",this.handleTouchEnd.bind(this),{passive:!1}),this.container.addEventListener("mousedown",this.handleMouseStart.bind(this)),this.container.addEventListener("mousemove",this.handleMouseMove.bind(this)),this.container.addEventListener("mouseup",this.handleMouseEnd.bind(this)),document.addEventListener("keydown",this.handleKeydown.bind(this),{capture:!0}),this.observeRouteChanges())}handleTouchStart(t){this.isEnabled&&(this.touchStartX=t.touches[0].clientX,this.touchStartY=t.touches[0].clientY,this.isSwiping=!1)}handleTouchMove(t){if(!this.isEnabled||!this.touchStartX)return;const i=t.target.tagName;if(["BUTTON","A","INPUT","SELECT","TEXTAREA","LABEL"].includes(i))return void(this.isSwiping=!1);const e=t.touches[0].clientX,n=t.touches[0].clientY,s=Math.abs(e-this.touchStartX);s>1.5*Math.abs(n-this.touchStartY)&&s>24&&(this.isSwiping=!0,t.preventDefault(),this.showSwipeFeedback(s))}handleTouchEnd(t){if(!this.isEnabled||!this.isSwiping)return;this.touchEndX=t.changedTouches[0].clientX,this.touchEndY=t.changedTouches[0].clientY;const i=this.touchEndX-this.touchStartX,e=this.touchEndY-this.touchStartY;Math.abs(i)>this.swipeThreshold&&Math.abs(i)>Math.abs(e)&&this.handleSwipe(i>0?"right":"left"),this.resetSwipe()}handleMouseStart(t){this.isEnabled&&0===t.button&&(this.touchStartX=t.clientX,this.touchStartY=t.clientY,this.isSwiping=!1)}handleMouseMove(t){if(!this.isEnabled||!this.touchStartX)return;const i=Math.abs(t.clientX-this.touchStartX);i>Math.abs(t.clientY-this.touchStartY)&&i>10&&(this.isSwiping=!0)}handleMouseEnd(t){if(!this.isEnabled||!this.isSwiping)return;this.touchEndX=t.clientX,this.touchEndY=t.clientY;const i=this.touchEndX-this.touchStartX,e=this.touchEndY-this.touchStartY;Math.abs(i)>this.swipeThreshold&&Math.abs(i)>Math.abs(e)&&this.handleSwipe(i>0?"right":"left"),this.resetSwipe()}handleKeydown(t){if("INPUT"!==t.target.tagName&&"TEXTAREA"!==t.target.tagName&&"true"!==t.target.contentEditable&&this.isEnabled)switch(t.key){case"ArrowLeft":t.preventDefault(),t.stopPropagation(),this.navigateToTab(this.currentTabIndex-1);break;case"ArrowRight":t.preventDefault(),t.stopPropagation(),this.navigateToTab(this.currentTabIndex+1)}}handleSwipe(t){this.updateCurrentTabIndex();let i=this.currentTabIndex;"left"===t&&this.currentTabIndex<this.tabs.length-1?i=this.currentTabIndex+1:"right"===t&&this.currentTabIndex>0&&(i=this.currentTabIndex-1),i!==this.currentTabIndex?(this.navigateToTab(i),this.provideHapticFeedback()):this.showSwipeFeedback("edge")}navigateToTab(t){if(t<0||t>=this.tabs.length)return;const i=this.tabs[t];this.animateTransition(t),window.router?window.router(i):window.location.hash=i,window.updatePageTitle&&window.updatePageTitle(i),this.currentTabIndex=t,this.updateSwipeIndicator()}animateTransition(t){const i=this.container,e=t>this.currentTabIndex?1:-1;i.classList.add("swipe-transition"),i.style.transform=`translateX(${20*e}px)`,i.style.opacity="0.8",setTimeout(()=>{i.style.transform="translateX(0)",i.style.opacity="1"},50),setTimeout(()=>{i.classList.remove("swipe-transition"),i.style.transform="",i.style.opacity=""},300)}showSwipeFeedback(t){let i="";if("edge"!==t)return;i=0===this.currentTabIndex?"Primeira aba":"Última aba";const e=document.createElement("div");e.className="swipe-feedback",e.textContent=i,document.body.appendChild(e),setTimeout(()=>e.classList.add("show"),10),setTimeout(()=>{e.classList.remove("show"),setTimeout(()=>e.remove(),200)},1e3)}provideHapticFeedback(){"vibrate"in navigator&&navigator.vibrate(50)}updateCurrentTabIndex(){const t=document.querySelector(".nav-btn.active");if(t){const i=t.getAttribute("data-route"),e=this.tabs.indexOf(i);e!==this.currentTabIndex&&(this.currentTabIndex=e)}}updateSwipeIndicator(){if(!this.swipeIndicator)return;this.swipeIndicator.querySelectorAll(".swipe-dot").forEach((t,i)=>{t.classList.toggle("active",i===this.currentTabIndex)}),this.hasShownInitialHint||(this.hasShownInitialHint=!0,this.swipeIndicator.classList.add("show"),setTimeout(()=>{this.swipeIndicator.classList.remove("show")},4e3))}observeRouteChanges(){const t=()=>{this.updateCurrentTabIndex(),this.updateSwipeIndicator()};window.addEventListener("hashchange",t),t()}resetSwipe(){this.touchStartX=0,this.touchStartY=0,this.touchEndX=0,this.touchEndY=0,this.isSwiping=!1}enable(){this.isEnabled=!0}disable(){this.isEnabled=!1}destroy(){this.swipeIndicator&&this.swipeIndicator.remove()}}window.swipeNavigation=null;export{t as SwipeNavigation};

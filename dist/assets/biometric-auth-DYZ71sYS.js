import{S as t,M as c}from"./main-2jpgV3_S.js";class l{constructor(){this.isSupported=this.checkSupport(),this.isAvailable=!1,this.credentials=null}checkSupport(){return window.PublicKeyCredential&&window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable&&window.PublicKeyCredential.isConditionalMediationAvailable}async checkAvailability(){if(!this.isSupported)return console.log("🔒 BiometricAuth: Web Authentication API não suportada"),!1;try{const[e,i]=await Promise.all([window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable(),window.PublicKeyCredential.isConditionalMediationAvailable()]);return this.isAvailable=e&&i,console.log("🔒 BiometricAuth: Disponibilidade verificada:",{userVerifying:e,conditionalMediation:i,isAvailable:this.isAvailable}),this.isAvailable}catch(e){return console.error("🔒 BiometricAuth: Erro ao verificar disponibilidade:",e),!1}}async register(e,i){if(!this.isAvailable)throw new Error("Autenticação biométrica não disponível");try{console.log("🔒 BiometricAuth: Iniciando registro biométrico...");const o=new Uint8Array(32);window.crypto.getRandomValues(o);const a={challenge:o,rp:{name:"Servo Tech Finanças",id:window.location.hostname},user:{id:new Uint8Array(16),name:i,displayName:i},pubKeyCredParams:[{type:"public-key",alg:-7}],authenticatorSelection:{authenticatorAttachment:"platform",userVerification:"required"},timeout:6e4,attestation:"direct"},n=await navigator.credentials.create({publicKey:a});return this.credentials=n,this.saveCredentials(e,n),console.log("🔒 BiometricAuth: Registro biométrico concluído"),!0}catch(o){throw console.error("🔒 BiometricAuth: Erro no registro:",o),o}}async authenticate(){if(!this.isAvailable)throw new Error("Autenticação biométrica não disponível");try{console.log("🔒 BiometricAuth: Iniciando autenticação biométrica...");const e=this.loadCredentials();if(!e)throw new Error("Nenhuma credencial biométrica registrada");const i=new Uint8Array(32);window.crypto.getRandomValues(i);const o={challenge:i,rpId:window.location.hostname,allowCredentials:[{type:"public-key",id:e.rawId,transports:["internal"]}],userVerification:"required",timeout:6e4},a=await navigator.credentials.get({publicKey:o});return console.log("🔒 BiometricAuth: Autenticação biométrica bem-sucedida"),{success:!0,userId:e.userId,credential:a}}catch(e){throw console.error("🔒 BiometricAuth: Erro na autenticação:",e),e}}saveCredentials(e,i){try{const o={userId:e,rawId:Array.from(i.rawId),type:i.type,response:{clientDataJSON:Array.from(i.response.clientDataJSON),attestationObject:Array.from(i.response.attestationObject)}};localStorage.setItem("biometric_credentials",JSON.stringify(o)),this.saveUserInfo(e),console.log("🔒 BiometricAuth: Credenciais salvas no localStorage")}catch(o){console.error("🔒 BiometricAuth: Erro ao salvar credenciais:",o)}}saveUserInfo(){try{const e=window.FirebaseAuth?.currentUser;if(e){const i={uid:e.uid,email:e.email,displayName:e.displayName,photoURL:e.photoURL,lastLogin:new Date().toISOString()};localStorage.setItem("biometric_user_info",JSON.stringify(i)),console.log("🔒 BiometricAuth: Informações do usuário salvas")}}catch(e){console.error("🔒 BiometricAuth: Erro ao salvar informações do usuário:",e)}}loadUserInfo(){try{const e=localStorage.getItem("biometric_user_info");return e?JSON.parse(e):null}catch(e){return console.error("🔒 BiometricAuth: Erro ao carregar informações do usuário:",e),null}}loadCredentials(){try{const e=localStorage.getItem("biometric_credentials");if(!e)return null;const i=JSON.parse(e);return i.rawId=new Uint8Array(i.rawId),i.response.clientDataJSON=new Uint8Array(i.response.clientDataJSON),i.response.attestationObject=new Uint8Array(i.response.attestationObject),i}catch(e){return console.error("🔒 BiometricAuth: Erro ao carregar credenciais:",e),null}}hasSavedCredentials(){return localStorage.getItem("biometric_credentials")!==null}removeCredentials(){try{return localStorage.removeItem("biometric_credentials"),console.log("🔒 BiometricAuth: Credenciais removidas"),!0}catch(e){return console.error("🔒 BiometricAuth: Erro ao remover credenciais:",e),!1}}getDeviceInfo(){return{isSupported:this.isSupported,isAvailable:this.isAvailable,hasCredentials:this.hasSavedCredentials(),userAgent:navigator.userAgent,platform:navigator.platform}}}window.biometricAuth=new l;window.showBiometricSetup=async function(){try{if(!await window.biometricAuth.checkAvailability()){t({message:"Autenticação biométrica não disponível neste dispositivo.",type:"warning"});return}const e=window.FirebaseAuth?.currentUser;if(!e){t({message:"Você precisa estar logado para configurar autenticação biométrica.",type:"error"});return}const i=c({title:"🔒 Configurar Autenticação Biométrica",content:`
        <div class="space-y-4">
          <div class="text-center">
            <div class="text-6xl mb-4">🔐</div>
            <h3 class="text-lg font-semibold mb-2">Autenticação Biométrica</h3>
            <p class="text-gray-600 dark:text-gray-300">
              Configure impressão digital ou reconhecimento facial para acessar o app rapidamente.
            </p>
          </div>
          
          <div class="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
            <h4 class="font-semibold text-blue-800 dark:text-blue-200 mb-2">📱 Como Funciona:</h4>
            <ul class="text-sm text-blue-700 dark:text-blue-300 space-y-1">
              <li>• Use sua impressão digital ou face para fazer login</li>
              <li>• Acesso rápido e seguro ao aplicativo</li>
              <li>• Funciona offline, sem necessidade de senha</li>
              <li>• Dados armazenados localmente no seu dispositivo</li>
            </ul>
          </div>

          <div class="flex flex-col gap-3">
            <button id="btn-setup-biometric" class="w-full bg-green-500 text-white py-3 rounded-lg font-semibold hover:bg-green-600 flex items-center justify-center gap-2">
              <span>🔐</span> Configurar Agora
            </button>
            <button onclick="closeModal()" class="w-full bg-gray-500 text-white py-2 rounded-lg hover:bg-gray-600">
              Cancelar
            </button>
          </div>
        </div>
      `,onClose:()=>i.remove()});document.body.appendChild(i),setTimeout(()=>{const o=document.getElementById("btn-setup-biometric");o&&o.addEventListener("click",async()=>{try{o.disabled=!0,o.innerHTML="<span>⏳</span> Configurando...",await window.biometricAuth.register(e.uid,e.email),window.biometricAuth.saveUserInfo(e.uid),t({message:"Autenticação biométrica configurada com sucesso!",type:"success"}),i.remove()}catch(a){console.error("Erro na configuração biométrica:",a),t({message:"Erro ao configurar autenticação biométrica: "+a.message,type:"error"}),o.disabled=!1,o.innerHTML="<span>🔐</span> Configurar Agora"}})},100)}catch(r){console.error("Erro ao mostrar configuração biométrica:",r),t({message:"Erro ao abrir configuração biométrica: "+r.message,type:"error"})}};window.authenticateWithBiometric=async function(){try{if(console.log("🔐 Iniciando autenticação biométrica..."),!await window.biometricAuth.checkAvailability())return t({message:"Autenticação biométrica não disponível neste dispositivo.",type:"warning"}),!1;if(!window.biometricAuth.hasSavedCredentials())return t({message:"Configure a autenticação biométrica primeiro nas configurações.",type:"info"}),!1;if(window.showLoading(!0),(await window.biometricAuth.authenticate()).success){console.log("🔐 Autenticação biométrica bem-sucedida, fazendo login...");const i=window.biometricAuth.loadCredentials(),o=window.biometricAuth.loadUserInfo();if(i&&i.userId&&o)try{const a=window.FirebaseAuth?.currentUser;if(a&&a.uid===i.userId)return console.log("🔐 Usuário já está logado"),t({message:"Login biométrico realizado com sucesso!",type:"success"}),window.showLoading(!1),!0;console.log("🔐 Fazendo login automático para usuário:",o.email);const n={uid:o.uid,email:o.email,displayName:o.displayName,photoURL:o.photoURL,isAnonymous:!1,providerData:[{providerId:"google.com",uid:o.uid,displayName:o.displayName,email:o.email,photoURL:o.photoURL}]},s=new CustomEvent("biometricLoginSuccess",{detail:{user:n,userId:i.userId}});return document.dispatchEvent(s),t({message:"Login biométrico realizado com sucesso!",type:"success"}),window.showLoading(!1),!0}catch(a){return console.error("Erro ao fazer login:",a),t({message:"Erro ao fazer login. Tente novamente.",type:"error"}),window.showLoading(!1),!1}else return t({message:"Credenciais biométricas inválidas ou incompletas.",type:"error"}),window.showLoading(!1),!1}return window.showLoading(!1),!1}catch(r){console.error("Erro na autenticação biométrica:",r);let e="Erro na autenticação biométrica.";return r.name==="NotAllowedError"?e="Autenticação biométrica cancelada pelo usuário.":r.name==="SecurityError"?e="Erro de segurança na autenticação biométrica.":r.name==="NotSupportedError"?e="Autenticação biométrica não suportada.":r.message&&(e=r.message),t({message:e,type:"error"}),window.showLoading(!1),!1}};document.addEventListener("DOMContentLoaded",async()=>{try{const r=await window.biometricAuth.checkAvailability();if(console.log("🔒 BiometricAuth: Inicialização concluída, disponível:",r),r&&window.biometricAuth.hasSavedCredentials()){const e=document.getElementById("biometric-login-btn");e&&(e.style.display="block",e.innerHTML="<span>🔐</span> Entrar com Biometria")}else{const e=document.getElementById("biometric-login-btn");e&&(e.style.display="none")}}catch(r){console.error("🔒 BiometricAuth: Erro na inicialização:",r)}});export{l as BiometricAuth};

import{c as d,f as y,a as r,w as u,d as c,u as i,q as w,h as A,o as l}from"./main-BVWxnpqW.js";const n="notifications";function p(t){return{id:t.id,...t.data()}}function m(t){const e=a=>a?.toDate?a.toDate():a?.seconds?new Date(a.seconds*1e3):a?new Date(a):new Date(0);return t.sort((a,s)=>e(s.createdAt)-e(a.createdAt))}function g(t,e,a=50){if(!t||typeof e!="function")return()=>{};const s=w(y(r,n),A("recipientUid","==",t));return l(s,h=>{let o=[];h.forEach(f=>o.push(p(f))),o=m(o).slice(0,a),e(o)})}async function S(t){return(await d(y(r,n),t)).id}async function b(t){t&&await i(c(r,n,t),{read:!0})}async function E(t=[]){if(!Array.isArray(t)||t.length===0)return;const e=u(r);t.forEach(a=>{e.update(c(r,n,a),{read:!0})}),await e.commit()}async function q(t=[]){if(!Array.isArray(t)||t.length===0)return;const e=u(r);t.forEach(a=>{e.delete(c(r,n,a))}),await e.commit()}async function B(t,e=!0){t&&await i(c(r,n,t),{pinned:!!e})}async function M(t,e=!0){if(!t)return;const a=e?{archivedAt:new Date().toISOString()}:{archivedAt:null};await i(c(r,n,t),a)}async function O(t=[]){if(!Array.isArray(t)||t.length===0)return;const e=u(r),a=new Date().toISOString();t.forEach(s=>{e.update(c(r,n,s),{archivedAt:a})}),await e.commit()}export{M as archive,O as archiveMany,S as create,q as deleteMany,g as listenByRecipient,b as markAsRead,E as markManyAsRead,B as pin};

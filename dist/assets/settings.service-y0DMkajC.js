import{q as t,c as e,d as i,w as a,h as n,e as s,g as r,u as o,j as d,y as u,f as c,b as w}from"./main-OjaIp7EQ.js";import{z as m,A as l}from"./main-OjaIp7EQ.js";import"./vendor-7JQXQzuE.js";async function f(o){if(!o)return[];try{const d=t(e(i,"budgetInvitations"),a("invitedUserId","==",o)),u=await n(d),c=window.appState?.currentUser;let w;if(c?.email){const s=t(e(i,"budgetInvitations"),a("invitedUserEmail","==",c.email)),r=await n(s),o=new Map;[...u.docs,...r.docs].forEach(t=>{o.set(t.id,{id:t.id,...t.data()})}),w=Array.from(o.values()).filter(t=>"pending"===t.status)}else w=u.docs.map(t=>({id:t.id,...t.data()})).filter(t=>"pending"===t.status);const m=new Map,l=new Map;for(const t of w)if(t.budgetId){if(!m.has(t.budgetId)){const e=s(i,"budgets",t.budgetId),a=await r(e);m.set(t.budgetId,a.exists()?a.data():null)}const e=m.get(t.budgetId);t.budgetName=t.budgetName||e?.nome||"Orçamento";const a=e?.userId;if(a){if(!l.has(a)){const t=s(i,"users",a),e=await r(t);l.set(a,e.exists()?e.data():null)}t.ownerEmail=t.ownerEmail||l.get(a)?.email||"proprietario"}}return w}catch(d){if("permission-denied"===d.code)return[];throw d}}async function g(s){if(!s)return[];try{const r=t(e(i,"budgetInvitations"),a("budgetId","==",s));return(await n(r)).docs.map(t=>({id:t.id,...t.data()})).filter(t=>"pending"===t.status)}catch(r){if("permission-denied"===r.code)return[];throw r}}async function p(t){const e=s(i,"budgetInvitations",t);await o(e,{status:"accepted",acceptedAt:d()});const a=(await r(e)).data();if(!a||!a.budgetId)throw new Error("Dados do convite inválidos");{const t=window.appState?.currentUser?.uid;if(!t)throw new Error("Usuário não autenticado");const e=s(i,"budgets",a.budgetId);await o(e,{usuariosPermitidos:u(t)})}}async function b(t){const e=s(i,"budgetInvitations",t);await o(e,{status:"declined"})}async function I(t,e){const a=s(i,"budgets",t),n=await r(a);if(!n.exists())throw new Error("Orçamento não encontrado.");const d=(n.data().usuariosPermitidos||[]).filter(t=>t!==e);await o(a,{usuariosPermitidos:d})}async function v(t,e){const a=s(i,"budgets",t);await o(a,{nome:e})}async function h(t){const e=s(i,"budgetInvitations",t);await c(e)}async function y(t){if(!t)return null;const e=s(i,"users",t),a=await r(e);return a.exists()?{uid:a.id,...a.data()}:null}async function E(t){if(!t||0===t.length)return[];const e=t.map(t=>y(t).catch(t=>null));return(await Promise.all(e)).filter(Boolean)}async function U(s){if(!s)return null;const r=t(e(i,"users"),a("email","==",s.toLowerCase())),o=await n(r);return o.empty?null:o.docs[0].id}async function x(o,u,c){if(!o)throw new Error("Orçamento inválido");if(!c||!c.uid)throw new Error("Usuário não autenticado");if(!u)throw new Error("Informe um email");const m=u.trim().toLowerCase();if(!/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(m))throw new Error("Email inválido");const l=s(i,"budgets",o),f=await r(l);if(!f.exists())throw new Error("Orçamento não encontrado");const g=f.data(),p=t(e(i,"budgetInvitations"),a("budgetId","==",o),a("invitedUserEmailLower","==",m),a("status","==","pending"));if(!(await n(p)).empty)throw new Error("Já existe um convite pendente para este email");const b=await U(m);let I="proprietario";try{if(g.userId){const t=s(i,"users",g.userId),e=await r(t);I=e.exists()&&e.data().email||I}}catch{}return{id:(await w(e(i,"budgetInvitations"),{budgetId:o,budgetName:g.nome||"Orçamento",ownerEmail:I,invitedByUserId:c.uid,invitedUserId:b||null,invitedUserEmail:u.trim(),invitedUserEmailLower:m,status:"pending",createdAt:d()})).id}}export{p as acceptBudgetInvitation,U as buscarUidPorEmail,h as cancelSentInvitation,b as declineBudgetInvitation,y as fetchUserInfo,E as fetchUsersInfo,m as getBudgetById,x as inviteUserToBudget,f as loadBudgetInvitations,g as loadSentBudgetInvitations,l as loadUserBudgets,I as removeUserFromBudget,v as updateBudgetName};
